<?php

/**
 * @file
 * Contains ymca_blocks.module.
 */

/**
 * Implements hook_theme().
 */
function ymca_blocks_theme($existing, $type, $theme, $path) {
  return array(
    'expander_block' => array(
      'variables' => array(
        'header' => NULL,
        'content' => NULL,
        'entity' => NULL,
      ),
      'template' => 'expander-block',
    ),
    'promo_block' => array(
      'variables' => array(
        'header' => NULL,
        'image' => NULL,
        'content' => NULL,
        'link' => NULL,
        'link_text' => NULL,
      ),
      'template' => 'promo-block',
    ),
  );
}

/**
 * Implements hook_ENTITY_TYPE_view_alter().
 */
function ymca_blocks_block_content_view_alter(array &$build, Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display) {
  switch ($entity->bundle()) {
    case 'date_block':
      $start_date = DateTime::createFromFormat(DATETIME_DATETIME_STORAGE_FORMAT, $entity->field_start_date->value, new DateTimeZone(DATETIME_STORAGE_TIMEZONE));
      $end_date = DateTime::createFromFormat(DATETIME_DATETIME_STORAGE_FORMAT, $entity->field_end_date->value, new DateTimeZone(DATETIME_STORAGE_TIMEZONE));

      if (REQUEST_TIME <= $start_date->getTimestamp()) {
        // Here will go content for before start date.
        hide($build['field_content_date_between']);
        hide($build['field_content_date_end']);

        // Cache to be invalidated when start time comes.
        $build['#cache']['max-age'] = $start_date->getTimestamp() - REQUEST_TIME;
      }
      elseif (REQUEST_TIME >= $end_date->getTimestamp()) {
        // Here will go content for after end date.
        hide($build['field_content_date_before']);
        hide($build['field_content_date_between']);

        // Ok, all the dates are behind. Cache permanently, by default.
      }
      else {
        // Here will go content for between dates.
        hide($build['field_content_date_before']);
        hide($build['field_content_date_end']);

        // Cache to be invalidated when end time comes.
        $build['#cache']['max-age'] = $end_date->getTimestamp() - REQUEST_TIME;
      }

      // Do not show date fields at all.
      hide($build['field_start_date']);
      hide($build['field_end_date']);
      break;

    case 'expander_block':
      $build['expander'] = array(
        '#theme' => 'expander_block',
        '#header' => $entity->field_block_header->value,
        '#content' => $build['field_block_content'],
        '#entity' => $entity,
      );

      // TODO: Not required now, should live in theme.
      // $build['#attached']['library'][] = 'ymca_blocks/expander-block';.
      break;

    case 'promo_block':
      $build['promo'] = array(
        '#theme' => 'promo_block',
        '#header' => \Drupal\Component\Utility\Html::escape($entity->field_block_header->value),
        '#content' => $build['field_block_content'],
        '#image' => $build['field_image'],
        '#link' => $entity->field_link->uri,
        '#link_text' => $entity->field_link->title,
      );

      hide($build['field_block_header']);
      hide($build['field_block_content']);
      hide($build['field_image']);
      hide($build['field_link']);
      break;
  }
}
